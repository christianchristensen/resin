<?php
/**
 * Provides the clustering information.
 */

require_once "WEB-INF/php/inc.php";

if (! admin_init($query, true)) {
  return;
}

?>

<h2>Cluster Overview</h2>

<!-- Cluster -->

<?php

$live_count = 0;

echo "<table class='data'>";
echo "<tr>";
echo "<th>Name</th>";
echo "<th>Uptime</th>";
echo "<th>Free Memory</th>";
echo "<th>CPU Avg</th>";
echo "<th>Thread</th>";
echo "</tr>";

foreach ($g_resin->Clusters as $cluster) {
  if (empty($cluster->Servers))
    continue;

  if (($_REQUEST['action'] == 'add_dynamic_server') &&
      ($_REQUEST['cluster'] == $cluster->Name)) {
    $server_id = $_REQUEST['dyn_server_id'];
    $server_ip = $_REQUEST['dyn_server_ip'];
    $server_port = $_REQUEST['dyn_server_port'];
    $cluster->addDynamicServer($server_id, $server_ip, $server_port);
  }

  echo "<tr><td class='group' colspan='8'>$cluster->Name</td></tr>\n";

  sort($client_names);

  $count = 0;
  $seen_dynamic = false;

  $server_names = array_merge(static_server_names($g_server, $cluster),
                              dynamic_server_names($g_server, $cluster));
  foreach ($server_names as $name) {
    $sub_mbean_server = new MBeanServer($name);

    $sub_server = $sub_mbean_server->lookup("resin:type=Server");
    $sub_cluster_server = server_by_name($name, $cluster);
    $cluster_index = sprintf("%02d", $sub_cluster_server->ClusterIndex);

    $is_dynamic = false;

    if ($sub_cluster_server)
      $is_dynamic = $sub_cluster_server->isDynamicServer();

    if ($is_dynamic && 
        ($_REQUEST['action'] == 'remove_dynamic_server') &&
        ($_REQUEST['dyn_server_id'] == $name) &&
        ($_REQUEST['cluster'] == $cluster->Name)) {
      $sub_cluster_server->removeDynamicServer();
      continue;
    }

    if ($is_dynamic && ! $seen_dynamic) {
      echo "<tr><td colspan='5'/></tr>\n";
      $seen_dynamic = true;
    }

    if (! $name)
      $name = "default";

    $name_field = $name;

    if ($is_dynamic) {
      $name_field = 
        "<form method='POST'>\n" .
        "<input type='hidden' name='action' value='remove_dynamic_server'/>\n" .
        "<input type='hidden' name='dyn_server_id' value='$name'/>\n" .
        "<input type='hidden' name='cluster' value='{$cluster->Name}'/>\n" .
        "<div style='float: left'>$name</div>\n" .
        "<div style='float: right'>" .
        "<input type='submit' value='remove'/>\n" .
        "</div></form>\n";
    }

    if ($count++ % 2 == 0)
      echo "<tr class='ra'>";
    else
      echo "<tr class='rb'>";

    if ($sub_server)
      echo "<td class='item'>$cluster_index - $name_field</td>";
    else
      echo "<td class='itemfail'>$cluster_index - $name_field</td>";

    if ($sub_server) {
      $live_count++;

      $start_time = $sub_server->StartTime->time / 1000;
      $now = $sub_server->CurrentTime->time / 1000;
      $uptime = $now - $start_time;

      if ($uptime < 12 * 3600)
        echo "<td class='warmup'>";
      else
        echo "<td>";

      echo sprintf("%d days %02d:%02d:%02d",
                   $uptime / (24 * 3600),
                   $uptime / 3600 % 24,
                   $uptime / 60 % 60,
                   $uptime % 60) . "</td>";

      $total_memory = $sub_server->RuntimeMemory / (1024 * 1024);
      $free_memory = $sub_server->RuntimeMemoryFree / (1024 * 1024);

      if ($free_memory < $total_memory * 0.02)
        echo "<td class='fail'>";
      else if ($free_memory < $total_memory * 0.05)
        echo "<td class='warn'>";
      else
        echo "<td>";

      echo sprintf("%.2fM (%.2fM)", $free_memory, $total_memory);
      echo "</td>";

      if ($sub_server->CpuLoadAvg > 2)
        echo "<td class='fail'>";
      else if ($sub_server->CpuLoadAvg > 1)
        echo "<td class='warn'>";
      else
        echo "<td>";
      echo sprintf("%.2f", $sub_server->CpuLoadAvg);
      echo "</td>";
    }
    else {
      echo "<td></td>";
      echo "<td></td>";
      echo "<td></td>";
    }

    $thread_pool = $sub_server->ThreadPool;
    if ($thread_pool) {
/*
      echo "<td>" . $thread_pool->ThreadActiveCount . "</td>";
      echo "<td>" . $thread_pool->ThreadIdleCount . "</td>";
*/
      echo "<td>" . $thread_pool->ThreadCount . "</td>";
    }
    else {
/*
      echo "<td></td>";
      echo "<td></td>";
*/
      echo "<td></td>";
    }

    echo "</tr>\n";
  }

  if ($cluster->Name == $g_server->Cluster->Name &&
      $cluster->isDynamicServerEnable()) {
    echo "<form method='POST'>\n";
    echo "<input type='hidden' name='action' value='add_dynamic_server'/>\n";
    echo "<input type='hidden' name='cluster' value='{$cluster->Name}'/>\n";
    echo "<tr><td colspan='5'><table><tr>\n";
    echo "<td>Server id: <input type='text' name='dyn_server_id'/></td>\n";
    echo "<td>IP: <input type='text' name='dyn_server_ip'/></td>\n";
    echo "<td>Port: <input type='text' name='dyn_server_port'/></td>\n";
    echo "<td><input type='submit' value='Add Dynamic Server'/></td>\n";
    echo "</tr></table></td></tr></form>\n";
  }
}

echo "</table>";

$servers = null;

/*
foreach ($g_resin->Clusters as $cluster) {
  if (empty($cluster->Servers))
    continue;
    
  foreach (server_names($g_server, $cluster) as $name) {
    $servers[] = $name;
  }
}
sort($servers);
*/

//reduce to app-tier servers only
foreach ($g_server->Cluster->Servers as $server) {
  $servers[] = sprintf("%02d", $server->ClusterIndex); 
}

$stat_service = $g_mbean_server->lookup("resin:type=StatService");

if ($stat_service) {
  create_graph("cpu", "OS|CPU|Unix Load Avg", $servers);
  create_graph("used", "JVM|Memory|Tenured Memory Used", $servers);
  create_graph("thread", "JVM|Thread|JVM Thread Count", $servers);
}

function create_graph($canvas_name, $attr, $servers)
{
  echo "<p>\n";

  $names = array();

  foreach ($servers as $server) {
    $names[] = $server . "|" . $attr;
  }

  //overview is for 24h period
  $period = 24 * 60 * 60;
  $end = time();
  $start = $end - $period;

  stat_graph($canvas_name, 600, 300, $start, $end, $names);
}

echo "<h2>Database Pools</h2>";

echo "<table class='data'>";
echo "<tr>";
echo "<th>Server</th>";
echo "<th>Name</th>";
echo "<th>Active</th>";
echo "<th>Idle</th>";
echo "<th>Pool Miss</th>";
echo "<th colspan='2'>Fail</th>";
echo "</tr>";

foreach ($g_resin->Clusters as $cluster) {

  if (empty($cluster->Servers))
    continue;

  echo "<tr><td class='group' colspan='7'>$cluster->Name</td></tr>\n";

  sort($client_names);

  $row = 0;
  foreach (server_names($g_server, $cluster) as $name) {
    $sub_mbean_server = new MBeanServer($name);

    $sub_server = $sub_mbean_server->lookup("resin:type=Server");

    if (! $name)
      $name = "default";

    if (! $sub_server) {
      echo "<tr class='" . row_style($row++) . "'>";
      echo "<td class='itemfail'>$name</td>";
      echo "<td colspan='6'/>";
      echo "</tr>";
      continue;
    }

    if ($sub_server)
      $db_pools = $sub_mbean_server->query("resin:*,type=ConnectionPool");

    if (! $db_pools) {
      echo "<tr class='" . row_style($row++) . "'>";
      echo "<td class='item'>$name</td>";
      echo "<td colspan='6'/>";
      echo "</tr>";
      continue;
    }

    $pool_count = 0;
    foreach ($db_pools as $pool) {
?>
    <tr class='<?= row_style($row++) ?>'>
    <?php
        if ($pool_count++ == 0)
          echo "<td class='item'>$name</td>\n";
        else
          echo "<td></td>\n";
     ?>
    <td><?= $pool->Name ?></td>
    <td><?= $pool->ConnectionActiveCount ?></td>
    <td><?= $pool->ConnectionIdleCount ?></td>
    <td><?= format_miss_ratio($pool->ConnectionCountTotal,
                              $pool->ConnectionCreateCountTotal) ?></td>
    <td><?= $pool->ConnectionFailCountTotal ?></td>
    <td class='<?= format_ago_class($pool->LastFailTime) ?>'>
        <?= format_ago($pool->LastFailTime) ?></td>
    </tr>
<?php
    }
  }
}

echo "</table>";

echo "<h2>Shutdown Messages</h2>";

echo "<table class='data'>";

foreach ($g_resin->Clusters as $cluster) {

  if (empty($cluster->Servers))
    continue;

  echo "<tr><td class='group'>$cluster->Name</td></tr>\n";

  sort($client_names);

  $row = 0;
  foreach (server_names($g_server, $cluster) as $name) {
    $sub_mbean_server = new MBeanServer($name);

    if (! $name)
      $name = "default";

    $sub_server = $sub_mbean_server->lookup("resin:type=Server");

    if (! $sub_server) {
      echo "<tr class='" . row_style($row++) . "'>";
      echo "<td class='itemfail'>$name</td>";
      echo "</tr>";
      continue;
    }

    echo "<tr>";
    echo "<td class='item'>$name</td>";
    echo "</tr>";

    echo "<tr><td>";
    //
    // startup
    //
    $start_time = $sub_server->StartTime->time / 1000;
    $logger_manager = $sub_mbean_server->lookup("resin:type=LogService");

    if (! $logger_manager)
      continue;

    $messages = $logger_manager->findMessages(($start_time - 15 * 60) * 1000, ($start_time - 2) * 1000);
    echo "<table class='data' width='100%'>\n";

    $messages = array_reverse($messages);

    echo "<tbody class='scroll'>\n";

    // mark the start time
    echo "<tr class='warning'>";
    echo "  <td class='date'>";
    echo strftime("%Y-%m-%d %H:%M:%S", $start_time);
    echo "</td>";
    echo "  <td class='level'></td>";
    echo "  <td class='message'>Start Time</td>";
    echo "</tr>";

    foreach ($messages as $message) {
      echo "<tr class='{$message->level}'>";
      echo "  <td class='date'>";
      echo strftime("%Y-%m-%d %H:%M:%S", $message->timestamp / 1000);
      echo "</td>";
      echo "  <td class='level'>{$message->level}</td>";
      echo "  <td class='message'>" . htmlspecialchars($message->message) . "</td>";
      echo "</tr>";
    }

    echo "</tbody>\n";
    echo "</table>\n";

    echo "</td></tr>";
  }
}

echo "</table>";

if ($live_count < 2) {
  echo "<p>The cluster report requires Resin Professional and enabled remote debugging</>\n";

  echo "<h3>resin.conf</h3>";
  echo "<pre>\n";
  echo "&lt;resin xmlns='http://caucho.com/ns/resin'\n";
  echo "       xmlns:resin='urn:java:com.caucho.resin'>\n";
  echo "\n";
  echo "  &lt;resin:AdminAuthenticator>\n";
  echo "    &lt;user name='...' password='...'/>\n";
  echo "  &lt;/resin:AdminAuthenticator>\n";
  echo "  ...\n";
  echo "  &lt;cluster id='...'>\n";
  echo "    &lt;resin:JmxService/>\n";
  echo "    ...\n";
  echo "  &lt;/cluster>\n";
  echo "&lt;/resin>\n";
  echo "</pre>\n";
}
